// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUUIDGen is a mock of UUIDGen interface
type MockUUIDGen struct {
	ctrl     *gomock.Controller
	recorder *MockUUIDGenMockRecorder
}

// MockUUIDGenMockRecorder is the mock recorder for MockUUIDGen
type MockUUIDGenMockRecorder struct {
	mock *MockUUIDGen
}

// NewMockUUIDGen creates a new mock instance
func NewMockUUIDGen(ctrl *gomock.Controller) *MockUUIDGen {
	mock := &MockUUIDGen{ctrl: ctrl}
	mock.recorder = &MockUUIDGenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUUIDGen) EXPECT() *MockUUIDGenMockRecorder {
	return m.recorder
}

// New mocks base method
func (m *MockUUIDGen) New() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "New")
	ret0, _ := ret[0].(string)
	return ret0
}

// New indicates an expected call of New
func (mr *MockUUIDGenMockRecorder) New() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "New", reflect.TypeOf((*MockUUIDGen)(nil).New))
}
